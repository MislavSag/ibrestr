% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/IB.R
\name{IB}
\alias{IB}
\title{IBREST Class}
\description{
Get data data from IB Client Portal API.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{host}}{Host, by default localhost}

\item{\code{port}}{Port, by default 5000}

\item{\code{base_url}}{Base url}

\item{\code{account_id}}{Account ID.}

\item{\code{strategy_name}}{Strategy name, optional.}

\item{\code{email_config}}{Configuration for email notifications.}

\item{\code{logger}}{Logger object for logging messages.}

\item{\code{conids_us}}{Helped object that contains all conids for US market.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-IB-new}{\code{IB$new()}}
\item \href{#method-IB-get}{\code{IB$get()}}
\item \href{#method-IB-post}{\code{IB$post()}}
\item \href{#method-IB-delete}{\code{IB$delete()}}
\item \href{#method-IB-send_email}{\code{IB$send_email()}}
\item \href{#method-IB-get_conids_by_exchange}{\code{IB$get_conids_by_exchange()}}
\item \href{#method-IB-search_contract_by_symbol}{\code{IB$search_contract_by_symbol()}}
\item \href{#method-IB-get_sec_definfo}{\code{IB$get_sec_definfo()}}
\item \href{#method-IB-get_stocks_by_symbol}{\code{IB$get_stocks_by_symbol()}}
\item \href{#method-IB-get_trading_schedule}{\code{IB$get_trading_schedule()}}
\item \href{#method-IB-place_order}{\code{IB$place_order()}}
\item \href{#method-IB-confirm_order}{\code{IB$confirm_order()}}
\item \href{#method-IB-place_and_confirm_order}{\code{IB$place_and_confirm_order()}}
\item \href{#method-IB-cancel_order}{\code{IB$cancel_order()}}
\item \href{#method-IB-get_live_orders}{\code{IB$get_live_orders()}}
\item \href{#method-IB-get_order_status}{\code{IB$get_order_status()}}
\item \href{#method-IB-get_order_status_repeated}{\code{IB$get_order_status_repeated()}}
\item \href{#method-IB-get_trades}{\code{IB$get_trades()}}
\item \href{#method-IB-get_market_data_snapshot}{\code{IB$get_market_data_snapshot()}}
\item \href{#method-IB-get_historical_data_beta}{\code{IB$get_historical_data_beta()}}
\item \href{#method-IB-get_historical_data}{\code{IB$get_historical_data()}}
\item \href{#method-IB-get_portfolio_accounts}{\code{IB$get_portfolio_accounts()}}
\item \href{#method-IB-get_portfolio_subaccounts}{\code{IB$get_portfolio_subaccounts()}}
\item \href{#method-IB-get_portfolio_summary}{\code{IB$get_portfolio_summary()}}
\item \href{#method-IB-get_account_positions}{\code{IB$get_account_positions()}}
\item \href{#method-IB-get_position_by_conid}{\code{IB$get_position_by_conid()}}
\item \href{#method-IB-get_account_performance}{\code{IB$get_account_performance()}}
\item \href{#method-IB-get_transaction_history}{\code{IB$get_transaction_history()}}
\item \href{#method-IB-check_gateway}{\code{IB$check_gateway()}}
\item \href{#method-IB-check_account}{\code{IB$check_account()}}
\item \href{#method-IB-order_result_to_html}{\code{IB$order_result_to_html()}}
\item \href{#method-IB-get_conid_by_symbol}{\code{IB$get_conid_by_symbol()}}
\item \href{#method-IB-set_holdings}{\code{IB$set_holdings()}}
\item \href{#method-IB-liquidate}{\code{IB$liquidate()}}
\item \href{#method-IB-liquidate_portfolio}{\code{IB$liquidate_portfolio()}}
\item \href{#method-IB-clone}{\code{IB$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IB-new"></a>}}
\if{latex}{\out{\hypertarget{method-IB-new}{}}}
\subsection{Method \code{new()}}{
List containing email configuration details. Includes fields for SMTP settings and email addresses.
Required elements: email_from, email_to, smtp_host, smtp_port, smtp_user, smtp_password.


Create a new IB object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IB$new(
  host = "localhost",
  port = 5000L,
  strategy_name = NULL,
  account_id = NULL,
  email_config = list(),
  logger = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{host}}{Host, by default localhost}

\item{\code{port}}{Port, by default 5000}

\item{\code{strategy_name}}{Strategy name, optional.}

\item{\code{account_id}}{Account ID.}

\item{\code{email_config}}{List containing email configuration details.
Includes fields for SMTP settings and email addresses.
Required elements: email_from, email_to,
smtp_host, smtp_port, smtp_user, smtp_password.}

\item{\code{logger}}{A logger object for logging. If not provided,
a default no-operation logger is used.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new `IB` object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IB-get"></a>}}
\if{latex}{\out{\hypertarget{method-IB-get}{}}}
\subsection{Method \code{get()}}{
Performs a GET request to the specified Interactive Brokers API endpoint.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IB$get(endpoint = "/sso/validate", query = NULL, times = 5L)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{endpoint}}{The endpoint path for the GET request.}

\item{\code{query}}{A list of query parameters for the GET request.}

\item{\code{times}}{The number of times to retry the GET request.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The response from the GET request.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IB-post"></a>}}
\if{latex}{\out{\hypertarget{method-IB-post}{}}}
\subsection{Method \code{post()}}{
Performs a POST request to the specified Interactive Brokers API endpoint.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IB$post(endpoint = "/tickle", body = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{endpoint}}{The endpoint path for the POST request.}

\item{\code{body}}{The body of the POST request.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The response from the POST request.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IB-delete"></a>}}
\if{latex}{\out{\hypertarget{method-IB-delete}{}}}
\subsection{Method \code{delete()}}{
Performs a DELETE request to the specified Interactive Brokers API endpoint.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IB$delete(endpoint)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{endpoint}}{The endpoint path for the DELETE request.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The response from the DELETE request.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IB-send_email"></a>}}
\if{latex}{\out{\hypertarget{method-IB-send_email}{}}}
\subsection{Method \code{send_email()}}{
Sends an email notification.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IB$send_email(subject, body, html = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{subject}}{The subject of the email.}

\item{\code{body}}{The body content of the email.}

\item{\code{html}}{Boolean indicating if the body content is HTML. Defaults to FALSE.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IB-get_conids_by_exchange"></a>}}
\if{latex}{\out{\hypertarget{method-IB-get_conids_by_exchange}{}}}
\subsection{Method \code{get_conids_by_exchange()}}{
Retrieves all contracts available on a specified exchange.
Note: This is only available for Stock contracts.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IB$get_conids_by_exchange(exchange)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{exchange}}{A string specifying the exchange.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data frame with columns.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IB-search_contract_by_symbol"></a>}}
\if{latex}{\out{\hypertarget{method-IB-search_contract_by_symbol}{}}}
\subsection{Method \code{search_contract_by_symbol()}}{
Searches by underlying symbol or company name and relays back what derivative contract(s) it has.
This endpoint must be called before using /secdef/info.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IB$search_contract_by_symbol(symbol, name = NULL, secType = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{symbol}}{String, required, underlying symbol of interest or company name if ‘name’ is set to true.}

\item{\code{name}}{Boolean, optional, determines if symbol reflects company name or ticker symbol.}

\item{\code{secType}}{String, optional, declares underlying security type.
Valid values: "STK", "IND", "BOND".}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list containing details of the contract such as conid, companyName, symbol, etc.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IB-get_sec_definfo"></a>}}
\if{latex}{\out{\hypertarget{method-IB-get_sec_definfo}{}}}
\subsection{Method \code{get_sec_definfo()}}{
Retrieves security definition information for a given contract identifier (conid).
This method is applicable for various security types including futures, options, warrants, cash, and CFDs.
For derivatives, /iserver/secdef/search must be called first.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IB$get_sec_definfo(
  conid,
  sectype,
  month = NULL,
  exchange = NULL,
  strike = NULL,
  right = NULL,
  issuerId = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{conid}}{String, required, contract identifier of the underlying or the final derivative conid.}

\item{\code{sectype}}{String, required, security type of the requested contract.}

\item{\code{month}}{String, required for derivatives, expiration month for the given derivative.}

\item{\code{exchange}}{String, optional, exchange to receive information for in relation to the contract.}

\item{\code{strike}}{String, required for options and futures options, strike price for the requested contract.}

\item{\code{right}}{String, required for options, "C" for Call or "P" for Put.}

\item{\code{issuerId}}{String, required for bonds, issuerId for the given bond issuer.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list containing details of the contract such as conid, ticker, secType, etc.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IB-get_stocks_by_symbol"></a>}}
\if{latex}{\out{\hypertarget{method-IB-get_stocks_by_symbol}{}}}
\subsection{Method \code{get_stocks_by_symbol()}}{
Retrieves stock contracts for given symbol(s).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IB$get_stocks_by_symbol(symbols)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{symbols}}{String, required, comma-separated list of stock symbols.
Symbols must contain only capitalized letters.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list containing details of stock contracts.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IB-get_trading_schedule"></a>}}
\if{latex}{\out{\hypertarget{method-IB-get_trading_schedule}{}}}
\subsection{Method \code{get_trading_schedule()}}{
Retrieves the trading schedule up to a month for the requested contract.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IB$get_trading_schedule(
  assetClass,
  symbol,
  exchange = NULL,
  exchangeFilter = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{assetClass}}{String, required, security type of the given contract.
Possible values: STK, OPT, FUT, CFD, WAR, SWP, FND, BND, ICS.}

\item{\code{symbol}}{String, required, symbol for the contract.}

\item{\code{exchange}}{String, optional, primary exchange of the contract.}

\item{\code{exchangeFilter}}{String, optional, exchanges to retrieve data from.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list containing the trading schedule details.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IB-place_order"></a>}}
\if{latex}{\out{\hypertarget{method-IB-place_order}{}}}
\subsection{Method \code{place_order()}}{
Submits orders when connected to an IServer Brokerage Session.
Supports various advanced order types and additional details.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IB$place_order(orders, account_id = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{orders}}{Array of Objects, required, used to specify the order content.}

\item{\code{account_id}}{String, required, the account ID for which the order should be placed.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list containing details of the order status.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IB-confirm_order"></a>}}
\if{latex}{\out{\hypertarget{method-IB-confirm_order}{}}}
\subsection{Method \code{confirm_order()}}{
Confirms the order reply, agreeing or declining the message to transmit or discard the order.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IB$confirm_order(replyId, confirmed = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{replyId}}{String, required, the ID value from the prior order request.}

\item{\code{confirmed}}{Boolean, required, pass TRUE to agree to the message and transmit the order, or FALSE to decline and discard the order.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list containing details of the order confirmation.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IB-place_and_confirm_order"></a>}}
\if{latex}{\out{\hypertarget{method-IB-place_and_confirm_order}{}}}
\subsection{Method \code{place_and_confirm_order()}}{
Places an order and handles the confirmation process.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IB$place_and_confirm_order(account_id = NULL, orders)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{account_id}}{String, required, the account ID for which the order should be placed.}

\item{\code{orders}}{Array of Objects, required, used to specify the order content.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list containing details of the order placement and confirmation.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IB-cancel_order"></a>}}
\if{latex}{\out{\hypertarget{method-IB-cancel_order}{}}}
\subsection{Method \code{cancel_order()}}{
Cancels an open order for the specified account and order ID.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IB$cancel_order(account_id = NULL, orderId)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{account_id}}{String, required, the account ID for which the order should be canceled.}

\item{\code{orderId}}{String, required, the order ID that should be canceled.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list containing the confirmation of the cancellation request.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IB-get_live_orders"></a>}}
\if{latex}{\out{\hypertarget{method-IB-get_live_orders}{}}}
\subsection{Method \code{get_live_orders()}}{
Retrieves a list of live orders (cancelled, filled, submitted) for the given account.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IB$get_live_orders(filters = NULL, force = NULL, account_id = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{filters}}{String, optional, filter orders by a unique status value (separated by commas for multiple filters).}

\item{\code{force}}{Boolean, optional, force the system to clear saved information and make a fresh request for orders.}

\item{\code{account_id}}{String, optional, for linked accounts, view orders on specified sub-accounts.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list containing details of live orders.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IB-get_order_status"></a>}}
\if{latex}{\out{\hypertarget{method-IB-get_order_status}{}}}
\subsection{Method \code{get_order_status()}}{
Retrieves the status of an individual order using the orderId.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IB$get_order_status(orderId)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{orderId}}{String, required, order identifier for the placed order.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list containing details of the order status.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IB-get_order_status_repeated"></a>}}
\if{latex}{\out{\hypertarget{method-IB-get_order_status_repeated}{}}}
\subsection{Method \code{get_order_status_repeated()}}{
Retrieves the status of an individual order using the orderId and checks repeatedly for a specified duration.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IB$get_order_status_repeated(orderId, n)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{orderId}}{String, required, order identifier for the placed order.}

\item{\code{n}}{Integer, required, number of seconds to keep checking the order status.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Integer, 1L if the order status is 'filled' within the specified time, otherwise 0L.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IB-get_trades"></a>}}
\if{latex}{\out{\hypertarget{method-IB-get_trades}{}}}
\subsection{Method \code{get_trades()}}{
Retrieves a list of trades for the currently selected account for the current day and six previous days.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IB$get_trades(days = NULL, account_id = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{days}}{String, optional, specify the number of days to receive executions for, up to a maximum of 7 days.}

\item{\code{account_id}}{String, optional, include a specific account identifier or allocation group to retrieve trades for.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list containing details of trades.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IB-get_market_data_snapshot"></a>}}
\if{latex}{\out{\hypertarget{method-IB-get_market_data_snapshot}{}}}
\subsection{Method \code{get_market_data_snapshot()}}{
Retrieves market data for the given contract identifiers.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IB$get_market_data_snapshot(conids, fields)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{conids}}{String, required, comma-separated contract identifiers.}

\item{\code{fields}}{String, required, comma-separated series of field ids.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list containing market data for the specified contracts.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IB-get_historical_data_beta"></a>}}
\if{latex}{\out{\hypertarget{method-IB-get_historical_data_beta}{}}}
\subsection{Method \code{get_historical_data_beta()}}{
Retrieves a list of historical market data for a given contract identifier.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IB$get_historical_data_beta(
  conid,
  period,
  bar,
  outsideRth = NULL,
  startTime = NULL,
  direction = NULL,
  barType = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{conid}}{String, required, contract identifier for which data should be requested.}

\item{\code{period}}{String, required, duration for which data should be requested.}

\item{\code{bar}}{String, required, bar size for which bars should be returned.}

\item{\code{outsideRth}}{Boolean, optional, define if data should be returned for trades outside regular trading hours.}

\item{\code{startTime}}{String, optional, specify the value from where historical data should be taken.}

\item{\code{direction}}{String, optional, specify the direction from which market data should be returned.}

\item{\code{barType}}{String, optional, returns valid bar types for which data may be requested.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list containing historical market data.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IB-get_historical_data"></a>}}
\if{latex}{\out{\hypertarget{method-IB-get_historical_data}{}}}
\subsection{Method \code{get_historical_data()}}{
Retrieves historical market data for a given contract identifier.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IB$get_historical_data(
  conid,
  period,
  bar,
  exchange = NULL,
  startTime = NULL,
  outsideRth = NULL,
  clean = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{conid}}{String, required, contract identifier for the ticker symbol of interest.}

\item{\code{period}}{String, required, overall duration for which data should be returned.}

\item{\code{bar}}{String, required, individual bars of data to be returned.}

\item{\code{exchange}}{String, optional, exchange to receive data from.}

\item{\code{startTime}}{String, optional, starting date of the request duration.}

\item{\code{outsideRth}}{Boolean, optional, determine if data after regular trading hours is needed.}

\item{\code{clean}}{Boolean, optional, if TRUE extract data object}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list containing historical market data.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IB-get_portfolio_accounts"></a>}}
\if{latex}{\out{\hypertarget{method-IB-get_portfolio_accounts}{}}}
\subsection{Method \code{get_portfolio_accounts()}}{
Retrieves a list of accounts for which the user can view position and account information.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IB$get_portfolio_accounts()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list containing details of portfolio accounts.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IB-get_portfolio_subaccounts"></a>}}
\if{latex}{\out{\hypertarget{method-IB-get_portfolio_subaccounts}{}}}
\subsection{Method \code{get_portfolio_subaccounts()}}{
Retrieves a list of sub-accounts for which the user can view position and account-related information.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IB$get_portfolio_subaccounts()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list containing details of portfolio subaccounts.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IB-get_portfolio_summary"></a>}}
\if{latex}{\out{\hypertarget{method-IB-get_portfolio_summary}{}}}
\subsection{Method \code{get_portfolio_summary()}}{
Retrieves information regarding settled cash, cash balances, etc., in the account’s base currency and other cash balances held in other currencies.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IB$get_portfolio_summary(account_id = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{account_id}}{String, required, specify the account ID for which you require ledger information.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list containing details of the portfolio summary.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IB-get_account_positions"></a>}}
\if{latex}{\out{\hypertarget{method-IB-get_account_positions}{}}}
\subsection{Method \code{get_account_positions()}}{
Retrieves a list of positions for the given account with pagination support.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IB$get_account_positions(
  account_id = NULL,
  pageId,
  model = NULL,
  sort = NULL,
  direction = NULL,
  period = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{account_id}}{String, required, the account ID for which positions should be retrieved.}

\item{\code{pageId}}{String, required, the "page" of positions to be returned (pagination starts at 0).}

\item{\code{model}}{String, optional, code for the model portfolio to compare against.}

\item{\code{sort}}{String, optional, declare the table to be sorted by which column.}

\item{\code{direction}}{String, optional, the order to sort by ('a' for ascending, 'd' for descending).}

\item{\code{period}}{String, optional, period for PnL column (e.g., 1D, 7D, 1M).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list containing details of positions for the specified account and page.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IB-get_position_by_conid"></a>}}
\if{latex}{\out{\hypertarget{method-IB-get_position_by_conid}{}}}
\subsection{Method \code{get_position_by_conid()}}{
Retrieves position details for the specified contract identifier (conid).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IB$get_position_by_conid(account_id = NULL, conId)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{account_id}}{String, required, the account ID for which the position should be retrieved.}

\item{\code{conId}}{String, required, the contract ID to receive position information on.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list containing position details for the specified conid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IB-get_account_performance"></a>}}
\if{latex}{\out{\hypertarget{method-IB-get_account_performance}{}}}
\subsection{Method \code{get_account_performance()}}{
Retrieves account performance (MTM) for the specified accounts.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IB$get_account_performance(acctIds, freq = "D")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{acctIds}}{Array of Strings, required, account IDs to receive data for.}

\item{\code{freq}}{String, required, frequency for analysis.
Available Values: "D" (Daily), "M" (Monthly), "Q" (Quarterly).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list containing the account performance data.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IB-get_transaction_history"></a>}}
\if{latex}{\out{\hypertarget{method-IB-get_transaction_history}{}}}
\subsection{Method \code{get_transaction_history()}}{
Retrieves transaction history for specified account IDs and contract IDs.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IB$get_transaction_history(acctIds, conids, currency, days = 90)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{acctIds}}{Array of Strings, required, account IDs to receive data for.}

\item{\code{conids}}{Array of Integers, required, contract IDs to receive data for.}

\item{\code{currency}}{String, required, currency for displaying amounts.}

\item{\code{days}}{Integer, optional, number of days for transaction data.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list containing the transaction history data.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IB-check_gateway"></a>}}
\if{latex}{\out{\hypertarget{method-IB-check_gateway}{}}}
\subsection{Method \code{check_gateway()}}{
Check for errors in gateway
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IB$check_gateway(tries = 100)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tries}}{Number of tries - number of get requests and seconds.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Boolean (error or no error).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IB-check_account"></a>}}
\if{latex}{\out{\hypertarget{method-IB-check_account}{}}}
\subsection{Method \code{check_account()}}{
Check if account id is in accounts
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IB$check_account(account_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{account_id}}{String, required, the account ID for which the order should be placed.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Boolean (error or no error).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IB-order_result_to_html"></a>}}
\if{latex}{\out{\hypertarget{method-IB-order_result_to_html}{}}}
\subsection{Method \code{order_result_to_html()}}{
Performs a GET request to the specified Interactive Brokers API endpoint.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IB$order_result_to_html(order)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{order}}{Filled order response}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Html character.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IB-get_conid_by_symbol"></a>}}
\if{latex}{\out{\hypertarget{method-IB-get_conid_by_symbol}{}}}
\subsection{Method \code{get_conid_by_symbol()}}{
Get Conid by symbol
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IB$get_conid_by_symbol(symbol, sectype)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{symbol}}{String, required, underlying symbol of interest or company name if ‘name’ is set to true.}

\item{\code{sectype}}{String, required, security type of the requested contract.}

\item{\code{exchange}}{String, required, exchange to receive information for in relation to the contract.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Conid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IB-set_holdings"></a>}}
\if{latex}{\out{\hypertarget{method-IB-set_holdings}{}}}
\subsection{Method \code{set_holdings()}}{
Performs a GET request to the specified Interactive Brokers API endpoint.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IB$set_holdings(
  account_id = NULL,
  symbol,
  sectype,
  side,
  tif,
  weight,
  check = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{account_id}}{String, required, the account ID for which the order should be placed.}

\item{\code{symbol}}{String, required, underlying symbol of interest or company name if ‘name’ is set to true.}

\item{\code{sectype}}{String, required, security type of the requested contract.}

\item{\code{side}}{String, required, Valid Values: SELL or BUY.}

\item{\code{tif}}{String, required, The Time-In-Force determines how long the order remains active on the market.
Valid Values: GTC, OPG, DAY, IOC, PAX (CRYPTO ONLY).}

\item{\code{weight}}{Numeric, required, portfolio weight.}

\item{\code{check}}{Boolean, optional, if TRUE check if account_id is in accounts,
if Gataway is active and if function arguments have correct values and types.
If FALSE, skip checks, but is faster}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
It can return string if error or order info if everything is as expected.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IB-liquidate"></a>}}
\if{latex}{\out{\hypertarget{method-IB-liquidate}{}}}
\subsection{Method \code{liquidate()}}{
Liquidate all positions by symbol.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IB$liquidate(account_id = NULL, sectype = NULL, symbol = NULL, check = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{account_id}}{String, required, the account ID for which the order should be placed.}

\item{\code{sectype}}{String, required, security type of the requested contract.}

\item{\code{symbol}}{String, required, underlying symbol of interest or company name if ‘name’ is set to true.
If symbol is set to NULL, the method will liquidate all positions.}

\item{\code{check}}{Boolean, optional, if TRUE check if account_id is in accounts,
if Gataway is active and if function arguments have correct values and types.
If FALSE, skip checks, but is faster}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
It can return string if error or order info if everything is as expected.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IB-liquidate_portfolio"></a>}}
\if{latex}{\out{\hypertarget{method-IB-liquidate_portfolio}{}}}
\subsection{Method \code{liquidate_portfolio()}}{
Liquidate all positions for all symbols in the portfolio.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IB$liquidate_portfolio(account_id = NULL, sectype = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{account_id}}{String, required, the account ID for which the order should be placed.}

\item{\code{sectype}}{Character vector, required, security type we want to sell.
If it is NULL, the method will liquidate all positions.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Boolean.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IB-clone"></a>}}
\if{latex}{\out{\hypertarget{method-IB-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IB$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
